version: '3.1'
# This is only in order to run the local dev environment
# Type `docker-compose up` in your terminal
services:
  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpassword
    ports:
      - 5432:5432
    volumes:
      - ~/data/ChatApp:/var/lib/postgresql/data/


  django:
    labels:
      - traefik.http.routers.django.tls=true
      - traefik.http.routers.django.tls.certresolver=myresolver
      - "traefik.http.routers.django.rule=Host(`jured.best`)"
    build: .
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      DATABASE: chatdb
      USERNAME: chatuser
      PASSWORD: chatpassword
      HOST: db
      PORT: 5432
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock